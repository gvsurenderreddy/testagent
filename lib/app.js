// Generated by CoffeeScript 1.9.3
(function() {
  var bondingGet, bondingList, bondingPost, bondingmgr, fs, linkconfigDelete, linkconfigGet, linkconfigList, linkconfigPost, linkconfigStats, linkconfigmgr, restify, server, testDelete, testGet, testList, testPost, testmgr, util;

  restify = require('restify');

  util = require('util');

  fs = require('fs');

  testmgr = require('./testManager');

  linkconfigmgr = require('./linkconfigManager');

  bondingmgr = require('./bondingManager');

  testPost = function(req, res, next) {
    console.log("REST API - POST /Test received, body contents - " + JSON.stringify(req.body));
    return testmgr.create(req.body, (function(_this) {
      return function(result) {
        console.log("POST /Test result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  testList = function(req, res, next) {
    console.log("REST API  GET /Test received");
    return testmgr.list((function(_this) {
      return function(result) {
        console.log("list " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  testGet = function(req, res, next) {
    console.log("REST API  GET /Test received");
    return testmgr.get(req.params.id, (function(_this) {
      return function(result) {
        console.log("list " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  testDelete = function(req, res, next) {};

  linkconfigPost = function(req, res, next) {
    console.log("REST API - POST /Linkconfig received, body contents - " + JSON.stringify(req.body));
    return linkconfigmgr.create(req.body, (function(_this) {
      return function(result) {
        console.log("POST /Linkconfig result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  linkconfigGet = function(req, res, next) {
    console.log("REST API - GET /Linkconfig received, body contents - " + JSON.stringify(req.body));
    return linkconfigmgr.get(req.params.id, (function(_this) {
      return function(result) {
        console.log("GET /Linkconfig result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  linkconfigDelete = function(req, res, next) {
    console.log("REST API - GET /Linkconfig received, body contents - " + JSON.stringify(req.body));
    return linkconfigmgr.del(req.params.id, (function(_this) {
      return function(result) {
        console.log("GET /Linkconfig result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  linkconfigStats = function(req, res, next) {
    console.log("REST API - GET /Linkconfig/:id/stats received, body contents - " + JSON.stringify(req.body));
    return linkconfigmgr.statistics(req.params.id, (function(_this) {
      return function(result) {
        console.log("GET /Linkconfig result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  linkconfigList = function(req, res, next) {
    console.log("REST API  GET /Linkconfig received");
    return linkconfigmgr.list((function(_this) {
      return function(result) {
        console.log("list " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  bondingPost = function(req, res, next) {
    console.log("REST API - POST /bonding received, body contents - " + JSON.stringify(req.body));
    return bondingmgr.create(req.body, (function(_this) {
      return function(result) {
        console.log("POST /bonding result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  bondingGet = function(req, res, next) {
    console.log("REST API - GET /bonding received, body contents - " + JSON.stringify(req.body));
    return bondingmgr.get(req.params.id, (function(_this) {
      return function(result) {
        console.log("GET /bonding result " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  bondingList = function(req, res, next) {
    console.log("REST API  GET /bonding received");
    return bondingmgr.list((function(_this) {
      return function(result) {
        console.log("list " + JSON.stringify(result));
        res.send(result);
        return next();
      };
    })(this));
  };

  server = restify.createServer();

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.jsonp());

  server.use(restify.bodyParser());

  server.post('/Test', testPost);

  server.get('/Test', testList);

  server.get('/Test/:id', testGet);

  server.del('/Test/:id', testDelete);

  server.post('/Linkconfig', linkconfigPost);

  server.get('/Linkconfig', linkconfigList);

  server.get('/Linkconfig/:id', linkconfigGet);

  server.get('/Linkconfig/:id/stats', linkconfigStats);

  server.del('/Linkconfig/:id', linkconfigDelete);

  server.post('/bonding', bondingPost);

  server.get('/bonding', bondingList);

  server.get('/bonding/:id', bondingGet);

  server.listen(5051, function() {
    return console.log('testAgent listening on port : 5051.....');
  });

}).call(this);
